knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.align = 'center')
require(pacman)
p_load(
tidyverse,
dplyr,
ggplot2,
here,
janitor,
readr,
knitr,
scales
)
# Stacked bar chart
ggplot(weight_dist, aes(x = race, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "Race",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 2))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.align = 'center')
require(pacman)
p_load(
tidyverse,
dplyr,
ggplot2,
here,
janitor,
readr,
knitr,
scales
)
df <- read.csv(here("births_data.csv")) |>
clean_names() |>
na.omit() |>
rename(
race = mother_s_single_race,
hispanic_origin = mother_s_hispanic_origin,
infant_birth_weight = infant_birth_weight_12,
month_prenatal = month_prenatal_care_began
) |>
select(
race,
hispanic_origin,
infant_birth_weight,
month_prenatal,
births
) |>
mutate(
month_prenatal = parse_number(month_prenatal),
low_birth_weight = case_when(
infant_birth_weight %in% c(
"499 grams or less",
"500 - 999 grams",
"1000 - 1499 grams",
"1500 - 1999 grams",
"2000 - 2499 grams"
) ~ "Low birth weight",
TRUE ~ "Normal birth weight"
)
)
# Calculate key summary statistics
race_distribution <- df %>%
group_by(race) %>%
summarise(
total_births = sum(births),
n_records = n()
) %>%
mutate(percentage = (total_births / sum(total_births)) * 100) %>%
arrange(desc(total_births))
lbw_by_race <- df %>%
group_by(race, low_birth_weight) %>%
summarise(total = sum(births), .groups = "drop") %>%
group_by(race) %>%
mutate(percentage = (total / sum(total)) * 100) %>%
filter(low_birth_weight != "Normal birth weight") %>%
arrange(desc(percentage))
# Compare birth weight distributions across races
weight_dist <- df |>
group_by(race, low_birth_weight) |>
summarise(total = sum(births), .groups = "drop") |>
group_by(race) |>
mutate(percentage = (total / sum(total)) * 100)
# Low birth weight rates by Hispanic origin
lbw_by_hispanic <- df |>
group_by(hispanic_origin, low_birth_weight) |>
summarise(total = sum(births)) |>
group_by(hispanic_origin) |>
mutate(percentage = (total / sum(total)) * 100) |>
filter(low_birth_weight != "Normal birth weight")
# Does earlier prenatal care reduce low birth weight?
care_timing_effect <- df |>
group_by(race, month_prenatal, low_birth_weight) |>
summarise(total = sum(births)) |>
group_by(month_prenatal) |>
mutate(percentage = (total / sum(total)) * 100) |>
filter(low_birth_weight != "Normal birth weight")
# Display summary table
kable(race_distribution,
col.names = c("Race", "Total Births", "Records", "% of Total"),
digits = 1,
caption = "Birth Distribution by Race")
# Aggregate the data first
agg_data <- df |>
group_by(race, low_birth_weight) |>
summarise(total = sum(births), .groups = "drop")
# Create contingency table using xtabs
cont_table <- xtabs(total ~ race + low_birth_weight, data = agg_data)
chisq_result <- chisq.test(cont_table)
# Format the contingency table
kable(cont_table,
caption = "Contingency Table: Race by Low Birth Weight Status",
booktabs = TRUE)
# Format chi-square results
chi_results <- data.frame(
Statistic = c("Chi-square", "Degrees of Freedom", "P-value"),
Value = c(
round(chisq_result$statistic, 2),
chisq_result$parameter,
ifelse(chisq_result$p.value < 0.001, "< 0.001",
round(chisq_result$p.value, 4))
)
)
kable(chi_results,
col.names = c("Test Statistic", "Value"),
caption = "Chi-Square Test Results",
booktabs = TRUE)
# Stacked bar chart
ggplot(weight_dist, aes(x = race, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "Race",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 2))
# Stacked bar chart
ggplot(weight_dist, aes(x = race, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "Race",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
# Stacked bar chart
ggplot(weight_dist, aes(x = race, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
# Visualize
ggplot(lbw_by_race, aes(x = reorder(race, -percentage), y = percentage)) +
geom_bar(stat = "identity", fill = "#d95f02", alpha = 0.8) +
ylim(0, 8) +
geom_text(aes(label = sprintf("%.1f%%", percentage)), vjust = -0.5, size = 3) +
labs(title = "Low Birth Weight Rates by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Stacked bar chart
ggplot(weight_dist, aes(x = race, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
View(weight_dist)
# Convert to factor with correct order
weight_dist <- weight_dist |>
mutate(low_birth_weight = factor(low_birth_weight, levels = weight_order),
# Add line breaks to long race names
race_formatted = str_replace(race, " or ", "\nor "))
# Convert to factor with correct order
weight_dist <- weight_dist |>
mutate(low_birth_weight = factor(low_birth_weight),
# Add line breaks to long race names
race_formatted = str_replace(race, " or ", "\nor "))
# Stacked bar chart
ggplot(weight_dist, aes(x = race, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
# Stacked bar chart
ggplot(weight_dist, aes(x = race_formatted, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
# Stacked bar chart
ggplot(weight_dist, aes(x = race_formatted, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", ) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
# Visualize
ggplot(lbw_by_race, aes(x = reorder(race, -percentage), y = percentage)) +
geom_bar(stat = "identity", fill = "#d95f02", alpha = 0.8) +
ylim(0, 8) +
geom_text(aes(label = sprintf("%.1f%%", percentage)), vjust = -0.5, size = 3) +
labs(title = "Low Birth Weight Rates by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert to factor with correct order
lbw_by_race <- lbw_by_race |>
mutate(race_formatted = str_replace(race, " or ", "\nor "))
# Visualize
ggplot(lbw_by_race, aes(x = reorder(race_formatted, -percentage), y = percentage)) +
geom_bar(stat = "identity", fill = "#d95f02", alpha = 0.8) +
ylim(0, 8) +
geom_text(aes(label = sprintf("%.1f%%", percentage)), vjust = -0.5, size = 3) +
labs(title = "Low Birth Weight Rates by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.align = 'center')
require(pacman)
p_load(
tidyverse,
dplyr,
ggplot2,
here,
janitor,
readr,
knitr,
scales
)
df <- read.csv(here("births_data.csv")) |>
clean_names() |>
na.omit() |>
rename(
race = mother_s_single_race,
hispanic_origin = mother_s_hispanic_origin,
infant_birth_weight = infant_birth_weight_12,
month_prenatal = month_prenatal_care_began
) |>
select(
race,
hispanic_origin,
infant_birth_weight,
month_prenatal,
births
) |>
mutate(
month_prenatal = parse_number(month_prenatal),
low_birth_weight = case_when(
infant_birth_weight %in% c(
"499 grams or less",
"500 - 999 grams",
"1000 - 1499 grams",
"1500 - 1999 grams",
"2000 - 2499 grams"
) ~ "Low birth weight",
TRUE ~ "Normal birth weight"
)
)
# Calculate key summary statistics
race_distribution <- df %>%
group_by(race) %>%
summarise(
total_births = sum(births),
n_records = n()
) %>%
mutate(percentage = (total_births / sum(total_births)) * 100) %>%
arrange(desc(total_births))
lbw_by_race <- df %>%
group_by(race, low_birth_weight) %>%
summarise(total = sum(births), .groups = "drop") %>%
group_by(race) %>%
mutate(percentage = (total / sum(total)) * 100) %>%
filter(low_birth_weight != "Normal birth weight") %>%
arrange(desc(percentage))
# Compare birth weight distributions across races
weight_dist <- df |>
group_by(race, low_birth_weight) |>
summarise(total = sum(births), .groups = "drop") |>
group_by(race) |>
mutate(percentage = (total / sum(total)) * 100)
# Low birth weight rates by Hispanic origin
lbw_by_hispanic <- df |>
group_by(hispanic_origin, low_birth_weight) |>
summarise(total = sum(births)) |>
group_by(hispanic_origin) |>
mutate(percentage = (total / sum(total)) * 100) |>
filter(low_birth_weight != "Normal birth weight")
# Does earlier prenatal care reduce low birth weight?
care_timing_effect <- df |>
group_by(race, month_prenatal, low_birth_weight) |>
summarise(total = sum(births)) |>
group_by(month_prenatal) |>
mutate(percentage = (total / sum(total)) * 100) |>
filter(low_birth_weight != "Normal birth weight")
# Display summary table
kable(race_distribution,
col.names = c("Race", "Total Births", "Records", "% of Total"),
digits = 1,
caption = "Birth Distribution by Race")
# Aggregate the data first
agg_data <- df |>
group_by(race, low_birth_weight) |>
summarise(total = sum(births), .groups = "drop")
# Create contingency table using xtabs
cont_table <- xtabs(total ~ race + low_birth_weight, data = agg_data)
chisq_result <- chisq.test(cont_table)
# Format the contingency table
kable(cont_table,
caption = "Contingency Table: Race by Low Birth Weight Status",
booktabs = TRUE)
# Format chi-square results
chi_results <- data.frame(
Statistic = c("Chi-square", "Degrees of Freedom", "P-value"),
Value = c(
round(chisq_result$statistic, 2),
chisq_result$parameter,
ifelse(chisq_result$p.value < 0.001, "< 0.001",
round(chisq_result$p.value, 4))
)
)
kable(chi_results,
col.names = c("Test Statistic", "Value"),
caption = "Chi-Square Test Results",
booktabs = TRUE)
# Stacked bar chart
ggplot(weight_dist, aes(x = race_formatted, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", alpha = 0.8) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
# Convert to factor with correct order
lbw_by_race <- lbw_by_race |>
mutate(race_formatted = str_replace(race, " or ", "\nor "))
# Visualize
ggplot(lbw_by_race, aes(x = reorder(race_formatted, -percentage), y = percentage)) +
geom_bar(stat = "identity", fill = "#d95f02", alpha = 0.8) +
ylim(0, 8) +
geom_text(aes(label = sprintf("%.1f%%", percentage)), vjust = -0.5, size = 3) +
labs(title = "Low Birth Weight Rates by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert to factor with correct order
weight_dist <- weight_dist |>
mutate(low_birth_weight = factor(low_birth_weight),
# Add line breaks to long race names
race_formatted = str_replace(race, " or ", "\nor "))
# Stacked bar chart
ggplot(weight_dist, aes(x = race_formatted, y = percentage, fill = low_birth_weight)) +
geom_bar(stat = "identity", alpha = 0.8) +
labs(title = "Birth Weight Distribution by Race in Oregon, 2018-2022",
x = "",
y = "Percentage (%)",
caption = "Source: CDC Wonder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
chisq_result$expected
kable(chi_results,
col.names = c("Test Statistic", "Value"),
caption = "Chi-Square Test Results",
booktabs = TRUE)
# Format chi-square results
chi_results <- data.frame(
Statistic = c("Chi-square", "Degrees of Freedom", "P-value"),
Value = c(
round(chisq_result$statistic, 2),
chisq_result$parameter,
ifelse(chisq_result$p.value < 0.001, "< 0.001",
round(chisq_result$p.value, 4))
)
)
kable(chi_results,
col.names = c("Test Statistic", "Value"),
caption = "Chi-Square Test Results",
booktabs = TRUE)
# Aggregate the data first
agg_data <- df |>
group_by(race, low_birth_weight) |>
summarise(total = sum(births), .groups = "drop")
# Create contingency table using xtabs
cont_table <- xtabs(total ~ race + low_birth_weight, data = agg_data)
chisq_result <- chisq.test(cont_table)
chisq_result$expected
chisq_result$expected
# Format the contingency table
kable(cont_table,
caption = "Contingency Table: Race by Low Birth Weight Status",
booktabs = TRUE)
# Format the contingency table
kable(cont_table,
caption = "Contingency Table: Race by Low Birth Weight Status",
booktabs = TRUE)
